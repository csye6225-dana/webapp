name: Build and Create Custom Image

on:
  pull_request_target:
    types: [closed]
    branches:
      - main

jobs:
  build-artifact-image:
    runs-on: ubuntu-latest
    env:
      MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install MySQL Server
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-server
          sudo systemctl start mysql.service
  
      - name: Configure MySQL
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
          MYSQL_USER: ${{ secrets.DB_USER }}
          MYSQL_USER_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DB_NAME: ${{ secrets.DB_NAME }} 
        run: |
          sudo mysql -e "CREATE USER ${MYSQL_USER}@'localhost' IDENTIFIED BY '${MYSQL_USER_PASSWORD}';" -p"${MYSQL_ROOT_PASSWORD}"
          sudo mysql -e "CREATE DATABASE ${MYSQL_DB_NAME};" -p"${MYSQL_ROOT_PASSWORD}"
          sudo mysql -e "GRANT ALL PRIVILEGES ON ${MYSQL_DB_NAME}.* TO '${MYSQL_USER}'@'localhost';" -p"${MYSQL_ROOT_PASSWORD}"
          sudo mysql -e "FLUSH PRIVILEGES;" -p"${MYSQL_ROOT_PASSWORD}"

      - name: Check MySQL Service Status
        run: |
          sudo systemctl status mysql.service

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.17.0
    
      # Write package.json content to a file
      - name: Write package.json
        run: npm init -y
        
      - name: Install packages
        run: npm install express sequelize dotenv mysql2 bcrypt basic-auth ci axios

      - name: Run the app
        run: nohup node app.js &
        env:
          PORT: ${{ secrets.PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }} 
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          MYSQL_PORT: ${{ secrets.MYSQL_PORT }}

      # Run integration tests
      - name: Run integration test 1
        run: node tests/test1.js

      # Run integration tests
      - name: Run integration test 2
        run: node tests/test2.js

      - name: Stop the app
        run: |
          # Find the process ID of the Node.js application
          PID=$(sudo lsof -t -i:${{secrets.MYSQL_PORT}}) 
          
          # Check if the process ID exists
          if [ -n "$PID" ]; then
            echo "Stopping Node.js application with PID $PID"
            
            # Terminate the Node.js application
            sudo kill -9 $PID
          else
            echo "No Node.js application found running on port your_port_number"
          fi


      - name: Set up Packer
        uses: hashicorp/setup-packer@main
        with:
          version: 'latest'
      
      - name: Write GCP Credentials File
        env:
          CREDENTIALS_GCP: ${{ secrets.CREDENTIAL_GCP }}
        run: |
          echo "$CREDENTIALS_GCP" > credentials.json
          echo "$LOCAL_MACHINE_SSH_KEY" > danakwoh_local.pub
      
      - name: Build Application Artifact
        run:  zip -r app_artifact.zip .
        working-directory: ${{ github.workspace }}
          
      - name: Run Packer to build custom image
        run: |
          cd ${{ github.workspace }}
          ls -a
          packer init .
          packer build -var-file="var.pkrvars.hcl" custom_image.pkr.hcl
