name: Connection Check

on:
  pull_request_target:
    branches:
      - main
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
      MYSQL_DATABASE: ${{ secrets.DB_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Install MySQL Server
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-server
          sudo systemctl start mysql.service

      - name: Configure MySQL
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
          MYSQL_USER: ${{ secrets.DB_USER }}
          MYSQL_USER_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DB_NAME: ${{ secrets.DB_NAME }} 
        run: |
          sudo mysql -e "CREATE USER '${MYSQL_USER}'@'localhost' IDENTIFIED BY '${MYSQL_USER_PASSWORD}';" -p"${MYSQL_ROOT_PASSWORD}"
          sudo mysql -e "CREATE DATABASE \`${MYSQL_DB_NAME}\`;" -p"${MYSQL_ROOT_PASSWORD}"
          sudo mysql -e "GRANT ALL PRIVILEGES ON \`${MYSQL_DB_NAME}\`.* TO '${MYSQL_USER}'@'localhost';" -p"${MYSQL_ROOT_PASSWORD}"
          sudo mysql -e "FLUSH PRIVILEGES;" -p"${MYSQL_ROOT_PASSWORD}"


      - name: Check MySQL Service Status
        run: |
          sudo systemctl status mysql.service

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
     
      # Write package.json content to a file
      - name: Write package.json
        run: npm init -y

      - name: Install packages
        run: npm install express sequelize dotenv mysql2 bcrypt basic-auth ci
        
      - name: Run the app
        run: nohup node app.js &
        env:
            DB_USER: ${{ secrets.DB_USER }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            DB_NAME: ${{ secrets.DB_NAME }}
            MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
            MYSQL_PORT: ${{ secrets.MYSQL_PORT }}

      - name: Check /healthz endpoint
        run: |
              status_code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/healthz)
              if [ "$status_code" -eq 200 ]; then
                echo "Health check passed: status code is 200"
              else
                echo "Health check failed: status code is $status_code"
                exit 1
              fi
